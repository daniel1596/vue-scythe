{"remainingRequest":"C:\\Users\\pkdan_000\\Documents\\JS practice\\vue-scythe\\trunk\\node_modules\\ts-loader\\index.js??ref--13-1!C:\\Users\\pkdan_000\\Documents\\JS practice\\vue-scythe\\trunk\\node_modules\\eslint-loader\\index.js??ref--12-0!C:\\Users\\pkdan_000\\Documents\\JS practice\\vue-scythe\\trunk\\src\\components\\Tile.ts","dependencies":[{"path":"C:\\Users\\pkdan_000\\Documents\\JS practice\\vue-scythe\\trunk\\src\\components\\Tile.ts","mtime":1539182606758},{"path":"C:\\Users\\pkdan_000\\Documents\\JS practice\\vue-scythe\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1538786880309},{"path":"C:\\Users\\pkdan_000\\Documents\\JS practice\\vue-scythe\\trunk\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\pkdan_000\\Documents\\JS practice\\vue-scythe\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// NOTE: not sure if .ts files should be used at all? Maybe. Or if it should all be in .vue files?\r\nclass CharacterStartTile {\r\n    constructor(centerX, centerY) {\r\n        this.centerX = centerX;\r\n        this.centerY = centerY;\r\n    }\r\n}\r\nclass LandTile {\r\n    // seems like the implements thing is necessary\r\n    constructor(centerX, centerY) {\r\n        this.centerX = centerX;\r\n        this.centerY = centerY;\r\n        // This tile will produce a specific resource on produce action\r\n    }\r\n    drawHex(x, y, fillColor, borderColor) {\r\n        // set fillColor to whatever - you get the idea\r\n    }\r\n}\r\nclass LakeTile {\r\n    // may not need a separate class for this... could just do isLake = true\r\n    // but also - not sure. it will not produce any resources.\r\n    constructor(centerX, centerY) {\r\n        this.centerX = centerX;\r\n        this.centerY = centerY;\r\n    }\r\n    drawHex(x, y, fillColor, borderColor) {\r\n        // set fillColor to blue for lake tile\r\n    }\r\n}\r\nexport default LandTile;\r\n// todo: this technically works, but now it only exports that one class from this file!\r\n// maybe eventually these will all be moved to their own separate files anyway, so it won't matter\r\n// I guess then I'd just have to separate files a little more with the different tiles\r\n",{"version":3,"file":"C:\\Users\\pkdan_000\\Documents\\JS practice\\vue-scythe\\trunk\\src\\components\\Tile.ts","sourceRoot":"","sources":["C:\\Users\\pkdan_000\\Documents\\JS practice\\vue-scythe\\trunk\\node_modules\\eslint-loader\\index.js??ref--12-0!C:\\Users\\pkdan_000\\Documents\\JS practice\\vue-scythe\\trunk\\src\\components\\Tile.ts"],"names":[],"mappings":"AAAA,kGAAkG;AAclG,MAAM,kBAAkB;IACvB,YAAmB,OAAe,EAAS,OAAe;QAAvC,YAAO,GAAP,OAAO,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;IAAG,CAAC;CAC9D;AAED,MAAM,QAAQ;IAIb,+CAA+C;IAC/C,YAAmB,OAAe,EAAS,OAAe;QAAvC,YAAO,GAAP,OAAO,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;QACzD,+DAA+D;IAChE,CAAC;IAND,OAAO,CAAC,CAAS,EAAE,CAAS,EAAE,SAAiB,EAAE,WAAmB;QACnE,+CAA+C;IAChD,CAAC;CAKD;AAED,MAAM,QAAQ;IAIb,wEAAwE;IACxE,0DAA0D;IAC1D,YAAmB,OAAe,EAAS,OAAe;QAAvC,YAAO,GAAP,OAAO,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;IAAG,CAAC;IAL9D,OAAO,CAAC,CAAS,EAAE,CAAS,EAAE,SAAiB,EAAE,WAAmB;QACnE,sCAAsC;IACvC,CAAC;CAID;AAED,eAAe,QAAQ,CAAC;AACxB,uFAAuF;AACvF,kGAAkG;AAClG,sFAAsF","sourcesContent":["// NOTE: not sure if .ts files should be used at all? Maybe. Or if it should all be in .vue files?\r\n\r\ninterface Tile {\r\n\t// hexagon - 6 sides\r\n\tcenterX: number\r\n\tcenterY: number\r\n}\r\n\r\ninterface HexagonTile extends Tile {\r\n\t// These tiles will have border colors - red (tunnels), blue (river/lake), black? (normal)\r\n\r\n\tdrawHex(x: number, y: number, fillColor: string, borderColor: string): void;\r\n}\r\n\r\nclass CharacterStartTile implements Tile {\r\n\tconstructor(public centerX: number, public centerY: number) {}\r\n}\r\n\r\nclass LandTile implements HexagonTile {\r\n\tdrawHex(x: number, y: number, fillColor: string, borderColor: string): void {\r\n\t\t// set fillColor to whatever - you get the idea\r\n\t}\r\n\t// seems like the implements thing is necessary\r\n\tconstructor(public centerX: number, public centerY: number) {\r\n\t\t// This tile will produce a specific resource on produce action\r\n\t}\r\n}\r\n\r\nclass LakeTile implements HexagonTile {\r\n\tdrawHex(x: number, y: number, fillColor: string, borderColor: string): void {\r\n\t\t// set fillColor to blue for lake tile\r\n\t}\r\n\t// may not need a separate class for this... could just do isLake = true\r\n\t// but also - not sure. it will not produce any resources.\r\n\tconstructor(public centerX: number, public centerY: number) {}\r\n}\r\n\r\nexport default LandTile;\r\n// todo: this technically works, but now it only exports that one class from this file!\r\n// maybe eventually these will all be moved to their own separate files anyway, so it won't matter\r\n// I guess then I'd just have to separate files a little more with the different tiles"]}]}